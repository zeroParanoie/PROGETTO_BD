-- MySQL Script generated by MySQL Workbench
-- Sat Jan 27 15:47:46 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`contatto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`contatto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`contatto` (
  `email` VARCHAR(45) NOT NULL,
  `IVArivenditaContatto` VARCHAR(11) NOT NULL,
  `telefono` VARCHAR(9) NULL,
  `cellulare` VARCHAR(10) NULL,
  PRIMARY KEY (`email`, `IVArivenditaContatto`),
  UNIQUE INDEX `telefono_UNIQUE` (`telefono` ASC) VISIBLE,
  UNIQUE INDEX `cellulare_UNIQUE` (`cellulare` ASC) VISIBLE,
  INDEX `fkContatto_idx` (`IVArivenditaContatto` ASC) VISIBLE,
  CONSTRAINT `fkContatto`
    FOREIGN KEY (`IVArivenditaContatto`)
    REFERENCES `mydb`.`rivendita` (`IVA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`contenuto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`contenuto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`contenuto` (
  `CodOrdineCont` VARCHAR(10) NOT NULL,
  `nomeLatinoSpecieCont` VARCHAR(45) NOT NULL,
  `qta_ordinata` INT NOT NULL,
  PRIMARY KEY (`CodOrdineCont`, `nomeLatinoSpecieCont`),
  INDEX `fkSpecie_idx` (`nomeLatinoSpecieCont` ASC) VISIBLE,
  CONSTRAINT `fkOrdine`
    FOREIGN KEY (`CodOrdineCont`)
    REFERENCES `mydb`.`ordine` (`Codice_ordine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkSpecie`
    FOREIGN KEY (`nomeLatinoSpecieCont`)
    REFERENCES `mydb`.`specie` (`nome_latino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`effettua`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`effettua` ;

CREATE TABLE IF NOT EXISTS `mydb`.`effettua` (
  `IVAeff` VARCHAR(11) NOT NULL,
  `codOrdineEff` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`IVAeff`, `codOrdineEff`),
  INDEX `fkOrdine_idx` (`codOrdineEff` ASC) VISIBLE,
  CONSTRAINT `fkRivendita`
    FOREIGN KEY (`IVAeff`)
    REFERENCES `mydb`.`rivendita` (`IVA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkOrdine`
    FOREIGN KEY (`codOrdineEff`)
    REFERENCES `mydb`.`ordine` (`Codice_ordine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornitore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornitore` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornitore` (
  `CF` VARCHAR(16) NOT NULL,
  `nomeFornitore` VARCHAR(45) NOT NULL,
  `cognomeFornitore` VARCHAR(45) NOT NULL,
  `Cfornitore` VARCHAR(10) NOT NULL,
  `sedePos` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`CF`),
  UNIQUE INDEX `Cfornitore_idx` (`Cfornitore` ASC) VISIBLE,
  UNIQUE INDEX `sedePos_idx` (`sedePos` ASC) VISIBLE,
  CONSTRAINT `fkFornitrice`
    FOREIGN KEY (`Cfornitore`)
    REFERENCES `mydb`.`fornitrice` (`Codice_fornitore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornitrice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornitrice` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornitrice` (
  `Codice_fornitore` VARCHAR(10) NOT NULL,
  `sede_f` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Codice_fornitore`),
  UNIQUE INDEX `sede_f_UNIQUE` (`sede_f` ASC) VISIBLE,
  CONSTRAINT `fkSede`
    FOREIGN KEY (`sede_f`)
    REFERENCES `mydb`.`sede` (`sede_a`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`indirizzo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`indirizzo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`indirizzo` (
  `fatturazione` VARCHAR(45) NOT NULL,
  `IVArivendita` VARCHAR(11) NOT NULL,
  `spedizione` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`fatturazione`, `IVArivendita`),
  INDEX `fkRivendita_idx` (`IVArivendita` ASC) VISIBLE,
  CONSTRAINT `fkRivendita`
    FOREIGN KEY (`IVArivendita`)
    REFERENCES `mydb`.`rivendita` (`IVA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ordine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ordine` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ordine` (
  `Codice_ordine` VARCHAR(10) NOT NULL,
  `recapito` VARCHAR(45) NOT NULL,
  `nomeOrdine` VARCHAR(45) NOT NULL,
  `cognomeOrdine` VARCHAR(45) NULL,
  `stato` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Codice_ordine`),
  INDEX `nomeOrdine_idx` (`cognomeOrdine` ASC) VISIBLE,
  INDEX `cognomeOrdine_udx` (`cognomeOrdine` ASC) VISIBLE,
  INDEX `ordine_info` (`stato` ASC, `recapito` ASC) VISIBLE,
  CONSTRAINT `fkNome`
    FOREIGN KEY (`cognomeOrdine`)
    REFERENCES `mydb`.`referente` (`cognomeReferente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pianta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pianta` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pianta` (
  `codice` VARCHAR(10) NOT NULL,
  `nomeLatinoSpeciePianta` VARCHAR(45) NOT NULL,
  `quantita` INT NOT NULL,
  PRIMARY KEY (`codice`, `nomeLatinoSpeciePianta`),
  INDEX `fkSpecie_idx` (`nomeLatinoSpeciePianta` ASC) VISIBLE,
  CONSTRAINT `fkSpecie`
    FOREIGN KEY (`nomeLatinoSpeciePianta`)
    REFERENCES `mydb`.`specie` (`nome_latino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`prezzo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`prezzo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`prezzo` (
  `costo` FLOAT NOT NULL,
  `nomeLatinoSpeciePrezzo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`costo`, `nomeLatinoSpeciePrezzo`),
  INDEX `fkSpecie_idx` (`nomeLatinoSpeciePrezzo` ASC) VISIBLE,
  CONSTRAINT `fkSpecie`
    FOREIGN KEY (`nomeLatinoSpeciePrezzo`)
    REFERENCES `mydb`.`specie` (`nome_latino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`referente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`referente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`referente` (
  `cognomeReferente` VARCHAR(45) NOT NULL,
  `IVArivenditaReferente` VARCHAR(11) NOT NULL,
  `nomeReferente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cognomeReferente`, `IVArivenditaReferente`),
  INDEX `fkRivendita_idx` (`IVArivenditaReferente` ASC) VISIBLE,
  CONSTRAINT `fkRivendita`
    FOREIGN KEY (`IVArivenditaReferente`)
    REFERENCES `mydb`.`rivendita` (`IVA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rifornisce`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`rifornisce` ;

CREATE TABLE IF NOT EXISTS `mydb`.`rifornisce` (
  `codFornitriceRif` VARCHAR(10) NOT NULL,
  `codicePiantaRif` VARCHAR(10) NOT NULL,
  `specieRif` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codFornitriceRif`, `codicePiantaRif`, `specieRif`),
  INDEX `fkPianta_idx` (`codicePiantaRif` ASC) VISIBLE,
  CONSTRAINT `fkFornitore`
    FOREIGN KEY (`codFornitriceRif`)
    REFERENCES `mydb`.`fornitore` (`CF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkPianta`
    FOREIGN KEY (`codicePiantaRif`)
    REFERENCES `mydb`.`pianta` (`codice`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`rivendita`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`rivendita` ;

CREATE TABLE IF NOT EXISTS `mydb`.`rivendita` (
  `IVA` VARCHAR(11) NOT NULL,
  `sede_rivendita` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IVA`),
  UNIQUE INDEX `sede_rivendita_idx` (`sede_rivendita` ASC) INVISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`sede`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`sede` ;

CREATE TABLE IF NOT EXISTS `mydb`.`sede` (
  `sede_a` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`sede_a`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`specie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`specie` ;

CREATE TABLE IF NOT EXISTS `mydb`.`specie` (
  `nome_latino` VARCHAR(45) NOT NULL,
  `nome_comune` VARCHAR(45) NOT NULL,
  `colore` VARCHAR(45) NULL,
  `dataAggPrezzo` DATETIME NOT NULL,
  `tipoGenetica` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nome_latino`),
  INDEX `tipoGenetica_idx` (`tipoGenetica` ASC) VISIBLE,
  CONSTRAINT `fkTipo`
    FOREIGN KEY (`tipoGenetica`)
    REFERENCES `mydb`.`tipo` (`tipo_a`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tipo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tipo` (
  `tipo_a` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tipo_a`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`user` ;

CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `ruolo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB;

USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_INSERT` BEFORE INSERT ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.email regexp '^[A-Za-z0-9+_.-]+@(.+)$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_INSERT_1` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_INSERT_1` BEFORE INSERT ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.telefono regexp '^[0-9]{4,15}$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_INSERT_2` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_INSERT_2` BEFORE INSERT ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.telefono regexp '^[0-9]{4,16}$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_UPDATE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_UPDATE` BEFORE UPDATE ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.email regexp '^[A-Za-z0-9+_.-]+@(.+)$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_UPDATE_1` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_UPDATE_1` BEFORE UPDATE ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.telefono regexp '^[0-9]{4,15}$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contatto_BEFORE_UPDATE_2` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contatto_BEFORE_UPDATE_2` BEFORE UPDATE ON `contatto` FOR EACH ROW
BEGIN
	if not NEW.telefono regexp '^[0-9]{4,16}$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`contenuto_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`contenuto_BEFORE_INSERT` BEFORE INSERT ON `contenuto` FOR EACH ROW 
BEGIN
	DECLARE piantaOrdinata VARCHAR(45);
    SELECT nomeLatinoSpeciePianta FROM pianta WHERE NEW.nomeLatinoSpecieCont = nomeLatinoSpeciePianta INTO piantaOrdinata;
	if (NEW.qta_ordinata > (SELECT quantita FROM pianta WHERE piantaOrdinata = nomeLatinoSpeciePianta)) then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`fornitore_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`fornitore_BEFORE_INSERT` BEFORE INSERT ON `fornitore` FOR EACH ROW
BEGIN
	if not NEW.CF regexp '^[A-Z]{6,6}[0-9]{2,2}[A-Z][0-9]{2,2}[A-Z][0-9]{3,3}[A-Z]$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`fornitrice_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`fornitrice_BEFORE_INSERT` BEFORE INSERT ON `fornitrice` FOR EACH ROW
BEGIN
	if not NEW.Codice_fornitore regexp '^[A-Za-z0-9]+$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`ordine_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ordine_BEFORE_INSERT` BEFORE INSERT ON `ordine` FOR EACH ROW
BEGIN
	if not NEW.Codice_ordine regexp '^[A-Za-z0-9]+$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`ordine_BEFORE_INSERT_1` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ordine_BEFORE_INSERT_1` BEFORE INSERT ON `ordine` FOR EACH ROW
BEGIN
	if (NEW.stato != 'aperto$') then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`ordine_BEFORE_UPDATE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`ordine_BEFORE_UPDATE` BEFORE UPDATE ON `ordine` FOR EACH ROW
BEGIN
	if (NEW.stato != 'aperto$' and NEW.stato != 'finalizzato$' and NEW.stato != 'in consegna$') then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`pianta_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`pianta_BEFORE_INSERT` BEFORE INSERT ON `pianta` FOR EACH ROW
BEGIN
	if not NEW.codice regexp '^[A-Za-z0-9]+$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`prezzo_AFTER_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`prezzo_AFTER_INSERT` AFTER INSERT ON `prezzo` FOR EACH ROW
BEGIN
	UPDATE specie SET dataAggPrezzo = GETDATE() WHERE NEW.nomeLatinoSpeciePrezzo = nome_latino;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`rivendita_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`rivendita_BEFORE_INSERT` BEFORE INSERT ON `rivendita` FOR EACH ROW
BEGIN
	if not NEW.IVA regexp '^[0-9]{11}$' then
		signal sqlstate '45000';
	end if;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`rivendita_BEFORE_UPDATE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`rivendita_BEFORE_UPDATE` BEFORE UPDATE ON `rivendita` FOR EACH ROW
BEGIN
	if not NEW.IVA regexp '^[0-9]{11}$' then
		signal sqlstate '45000';
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
